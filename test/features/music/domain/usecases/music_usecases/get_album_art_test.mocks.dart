// Mocks generated by Mockito 5.4.0 from annotations
// in music_player/test/features/music/domain/usecases/music_usecases/get_album_art_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:typed_data' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:on_audio_query/on_audio_query.dart' as _i3;
import 'package:on_audio_query_platform_interface/on_audio_query_platform_interface.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDeviceModel_0 extends _i1.SmartFake implements _i2.DeviceModel {
  _FakeDeviceModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [OnAudioQuery].
///
/// See the documentation for Mockito's code generation for more information.
class MockOnAudioQuery extends _i1.Mock implements _i3.OnAudioQuery {
  MockOnAudioQuery() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> checkAndRequest({bool? retryRequest = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkAndRequest,
          [],
          {#retryRequest: retryRequest},
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
  @override
  _i4.Future<void> setLogConfig(_i2.LogConfig? logConfig) =>
      (super.noSuchMethod(
        Invocation.method(
          #setLogConfig,
          [logConfig],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<List<_i2.SongModel>> querySongs({
    _i2.SongSortType? sortType,
    _i2.OrderType? orderType,
    _i2.UriType? uriType,
    bool? ignoreCase,
    String? path,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #querySongs,
          [],
          {
            #sortType: sortType,
            #orderType: orderType,
            #uriType: uriType,
            #ignoreCase: ignoreCase,
            #path: path,
          },
        ),
        returnValue: _i4.Future<List<_i2.SongModel>>.value(<_i2.SongModel>[]),
      ) as _i4.Future<List<_i2.SongModel>>);
  @override
  _i4.Future<List<_i2.AlbumModel>> queryAlbums({
    _i2.AlbumSortType? sortType,
    _i2.OrderType? orderType,
    _i2.UriType? uriType,
    bool? ignoreCase,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #queryAlbums,
          [],
          {
            #sortType: sortType,
            #orderType: orderType,
            #uriType: uriType,
            #ignoreCase: ignoreCase,
          },
        ),
        returnValue: _i4.Future<List<_i2.AlbumModel>>.value(<_i2.AlbumModel>[]),
      ) as _i4.Future<List<_i2.AlbumModel>>);
  @override
  _i4.Future<List<_i2.ArtistModel>> queryArtists({
    _i2.ArtistSortType? sortType,
    _i2.OrderType? orderType,
    _i2.UriType? uriType,
    bool? ignoreCase,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #queryArtists,
          [],
          {
            #sortType: sortType,
            #orderType: orderType,
            #uriType: uriType,
            #ignoreCase: ignoreCase,
          },
        ),
        returnValue:
            _i4.Future<List<_i2.ArtistModel>>.value(<_i2.ArtistModel>[]),
      ) as _i4.Future<List<_i2.ArtistModel>>);
  @override
  _i4.Future<List<_i2.PlaylistModel>> queryPlaylists({
    _i2.PlaylistSortType? sortType,
    _i2.OrderType? orderType,
    _i2.UriType? uriType,
    bool? ignoreCase,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #queryPlaylists,
          [],
          {
            #sortType: sortType,
            #orderType: orderType,
            #uriType: uriType,
            #ignoreCase: ignoreCase,
          },
        ),
        returnValue:
            _i4.Future<List<_i2.PlaylistModel>>.value(<_i2.PlaylistModel>[]),
      ) as _i4.Future<List<_i2.PlaylistModel>>);
  @override
  _i4.Future<List<_i2.GenreModel>> queryGenres({
    _i2.GenreSortType? sortType,
    _i2.OrderType? orderType,
    _i2.UriType? uriType,
    bool? ignoreCase,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #queryGenres,
          [],
          {
            #sortType: sortType,
            #orderType: orderType,
            #uriType: uriType,
            #ignoreCase: ignoreCase,
          },
        ),
        returnValue: _i4.Future<List<_i2.GenreModel>>.value(<_i2.GenreModel>[]),
      ) as _i4.Future<List<_i2.GenreModel>>);
  @override
  _i4.Future<List<_i2.SongModel>> queryAudiosFrom(
    _i2.AudiosFromType? type,
    Object? where, {
    _i2.SongSortType? sortType,
    _i2.OrderType? orderType,
    bool? ignoreCase,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #queryAudiosFrom,
          [
            type,
            where,
          ],
          {
            #sortType: sortType,
            #orderType: orderType,
            #ignoreCase: ignoreCase,
          },
        ),
        returnValue: _i4.Future<List<_i2.SongModel>>.value(<_i2.SongModel>[]),
      ) as _i4.Future<List<_i2.SongModel>>);
  @override
  _i4.Future<List<dynamic>> queryWithFilters(
    String? argsVal,
    _i2.WithFiltersType? withType, {
    dynamic args,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #queryWithFilters,
          [
            argsVal,
            withType,
          ],
          {#args: args},
        ),
        returnValue: _i4.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i4.Future<List<dynamic>>);
  @override
  _i4.Future<_i5.Uint8List?> queryArtwork(
    int? id,
    _i2.ArtworkType? type, {
    _i2.ArtworkFormat? format,
    int? size,
    int? quality,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #queryArtwork,
          [
            id,
            type,
          ],
          {
            #format: format,
            #size: size,
            #quality: quality,
          },
        ),
        returnValue: _i4.Future<_i5.Uint8List?>.value(),
      ) as _i4.Future<_i5.Uint8List?>);
  @override
  _i4.Future<List<_i2.SongModel>> queryFromFolder(
    String? path, {
    _i2.SongSortType? sortType,
    _i2.OrderType? orderType,
    _i2.UriType? uriType,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #queryFromFolder,
          [path],
          {
            #sortType: sortType,
            #orderType: orderType,
            #uriType: uriType,
          },
        ),
        returnValue: _i4.Future<List<_i2.SongModel>>.value(<_i2.SongModel>[]),
      ) as _i4.Future<List<_i2.SongModel>>);
  @override
  _i4.Future<List<String>> queryAllPath() => (super.noSuchMethod(
        Invocation.method(
          #queryAllPath,
          [],
        ),
        returnValue: _i4.Future<List<String>>.value(<String>[]),
      ) as _i4.Future<List<String>>);
  @override
  _i4.Future<bool> createPlaylist(
    String? name, {
    String? author,
    String? desc,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createPlaylist,
          [name],
          {
            #author: author,
            #desc: desc,
          },
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
  @override
  _i4.Future<bool> removePlaylist(int? playlistId) => (super.noSuchMethod(
        Invocation.method(
          #removePlaylist,
          [playlistId],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
  @override
  _i4.Future<bool> addToPlaylist(
    int? playlistId,
    int? audioId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addToPlaylist,
          [
            playlistId,
            audioId,
          ],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
  @override
  _i4.Future<bool> removeFromPlaylist(
    int? playlistId,
    int? audioId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFromPlaylist,
          [
            playlistId,
            audioId,
          ],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
  @override
  _i4.Future<bool> moveItemTo(
    int? playlistId,
    int? from,
    int? to,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #moveItemTo,
          [
            playlistId,
            from,
            to,
          ],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
  @override
  _i4.Future<bool> renamePlaylist(
    int? playlistId,
    String? newName,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #renamePlaylist,
          [
            playlistId,
            newName,
          ],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
  @override
  _i4.Future<bool> permissionsStatus() => (super.noSuchMethod(
        Invocation.method(
          #permissionsStatus,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
  @override
  _i4.Future<bool> permissionsRequest({bool? retryRequest = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #permissionsRequest,
          [],
          {#retryRequest: retryRequest},
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
  @override
  _i4.Future<_i2.DeviceModel> queryDeviceInfo() => (super.noSuchMethod(
        Invocation.method(
          #queryDeviceInfo,
          [],
        ),
        returnValue: _i4.Future<_i2.DeviceModel>.value(_FakeDeviceModel_0(
          this,
          Invocation.method(
            #queryDeviceInfo,
            [],
          ),
        )),
      ) as _i4.Future<_i2.DeviceModel>);
  @override
  _i4.Future<bool> scanMedia(String? path) => (super.noSuchMethod(
        Invocation.method(
          #scanMedia,
          [path],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}
