// Mocks generated by Mockito 5.1.0 from annotations
// in music_player/test/features/music/presentation/bloc/settings_bloc_test.dart/settings_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:music_player/core/error/failures.dart' as _i6;
import 'package:music_player/features/music/domain/repositories/settings_repository.dart'
    as _i2;
import 'package:music_player/features/music/domain/usecases/settings_usecases/get_theme.dart'
    as _i4;
import 'package:music_player/features/music/domain/usecases/settings_usecases/set_theme.dart'
    as _i8;
import 'package:music_player/features/music/domain/utilities/enums.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeSettingsRepository_0 extends _i1.Fake
    implements _i2.SettingsRepository {}

class _FakeEither_1<L, R> extends _i1.Fake implements _i3.Either<L, R> {}

/// A class which mocks [GetTheme].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTheme extends _i1.Mock implements _i4.GetTheme {
  MockGetTheme() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.SettingsRepository get repo =>
      (super.noSuchMethod(Invocation.getter(#repo),
          returnValue: _FakeSettingsRepository_0()) as _i2.SettingsRepository);
  @override
  set repo(_i2.SettingsRepository? _repo) =>
      super.noSuchMethod(Invocation.setter(#repo, _repo),
          returnValueForMissingStub: null);
  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.ThemeSetting>> call() =>
      (super.noSuchMethod(Invocation.method(#call, []),
          returnValue: Future<_i3.Either<_i6.Failure, _i7.ThemeSetting>>.value(
              _FakeEither_1<_i6.Failure, _i7.ThemeSetting>())) as _i5
          .Future<_i3.Either<_i6.Failure, _i7.ThemeSetting>>);
}

/// A class which mocks [SetTheme].
///
/// See the documentation for Mockito's code generation for more information.
class MockSetTheme extends _i1.Mock implements _i8.SetTheme {
  MockSetTheme() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.SettingsRepository get repo =>
      (super.noSuchMethod(Invocation.getter(#repo),
          returnValue: _FakeSettingsRepository_0()) as _i2.SettingsRepository);
  @override
  set repo(_i2.SettingsRepository? _repo) =>
      super.noSuchMethod(Invocation.setter(#repo, _repo),
          returnValueForMissingStub: null);
  @override
  _i5.Future<_i3.Either<_i6.Failure, bool>> call(_i7.ThemeSetting? theme) =>
      (super.noSuchMethod(Invocation.method(#call, [theme]),
              returnValue: Future<_i3.Either<_i6.Failure, bool>>.value(
                  _FakeEither_1<_i6.Failure, bool>()))
          as _i5.Future<_i3.Either<_i6.Failure, bool>>);
}
